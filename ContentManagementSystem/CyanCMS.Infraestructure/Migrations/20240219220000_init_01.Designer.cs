// <auto-generated />
using System;
using CyanCMS.Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CyanCMS.Infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240219220000_init_01")]
    partial class init_01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CyanCMS.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditCreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditUpdateUser")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(40)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditCreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditUpdateUser")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ComponentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSlider")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Style")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ComponentTypeId")
                        .IsUnique();

                    b.ToTable("Component");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.ComponentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ComponentType");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("MainColor")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SecondaryColor")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.ConfigurationComponentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComponentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ConfigurationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComponentTypeId")
                        .IsUnique();

                    b.HasIndex("ConfigurationId");

                    b.ToTable("ConfigurationComponentType");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.FileUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditCreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditUpdateUser")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FileBase64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ComponentId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditCreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditUpdateUser")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CompanyQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditCreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditUpdateUser")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("AuditCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditCreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditUpdateUser")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PlanId")
                        .IsUnique()
                        .HasFilter("[PlanId] IS NOT NULL");

                    b.HasIndex("RolId")
                        .IsUnique()
                        .HasFilter("[RolId] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Company", b =>
                {
                    b.HasOne("CyanCMS.Domain.Entities.User", "User")
                        .WithMany("Companies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Component", b =>
                {
                    b.HasOne("CyanCMS.Domain.Entities.Company", "Company")
                        .WithMany("Components")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CyanCMS.Domain.Entities.ComponentType", "ComponentType")
                        .WithOne("Component")
                        .HasForeignKey("CyanCMS.Domain.Entities.Component", "ComponentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ComponentType");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Configuration", b =>
                {
                    b.HasOne("CyanCMS.Domain.Entities.Company", "Company")
                        .WithOne("Configuration")
                        .HasForeignKey("CyanCMS.Domain.Entities.Configuration", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.ConfigurationComponentType", b =>
                {
                    b.HasOne("CyanCMS.Domain.Entities.ComponentType", "ComponentType")
                        .WithOne("ConfigurationComponentType")
                        .HasForeignKey("CyanCMS.Domain.Entities.ConfigurationComponentType", "ComponentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CyanCMS.Domain.Entities.Configuration", "Configuration")
                        .WithMany("ConfigurationComponentTypes")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponentType");

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.FileUnit", b =>
                {
                    b.HasOne("CyanCMS.Domain.Entities.Company", "Company")
                        .WithMany("Files")
                        .HasForeignKey("CompanyId");

                    b.HasOne("CyanCMS.Domain.Entities.Component", "Component")
                        .WithMany("Files")
                        .HasForeignKey("ComponentId");

                    b.Navigation("Company");

                    b.Navigation("Component");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.User", b =>
                {
                    b.HasOne("CyanCMS.Domain.Entities.Plan", "Plan")
                        .WithOne("User")
                        .HasForeignKey("CyanCMS.Domain.Entities.User", "PlanId");

                    b.HasOne("CyanCMS.Domain.Entities.Rol", "Rol")
                        .WithOne("User")
                        .HasForeignKey("CyanCMS.Domain.Entities.User", "RolId");

                    b.Navigation("Plan");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Company", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("Configuration");

                    b.Navigation("Files");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Component", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.ComponentType", b =>
                {
                    b.Navigation("Component");

                    b.Navigation("ConfigurationComponentType");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Configuration", b =>
                {
                    b.Navigation("ConfigurationComponentTypes");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Plan", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.Rol", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("CyanCMS.Domain.Entities.User", b =>
                {
                    b.Navigation("Companies");
                });
#pragma warning restore 612, 618
        }
    }
}
